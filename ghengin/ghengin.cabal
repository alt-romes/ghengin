cabal-version:      3.4
name:               ghengin
-- PVP summary:     +-+------- breaking API changes
--                  | | +----- non-breaking API additions
--                  | | | +--- code changes with no API change
version:            0.1.0.0

tested-with:        GHC ==9.10.1
-- synopsis:
-- description:
license:            BSD-3-Clause
license-file:       ../LICENSE
author:             romes
maintainer:         rodrigo.m.mesquita@gmail.com
-- copyright:
category:           Graphics
build-type:         Simple
extra-doc-files:    ../CHANGELOG.md
-- extra-source-files:
--     cbits/imgui_extensions/*.cpp
--     cbits/imgui_extensions/*.hpp

flag dev
  default: True
  manual: True
  description: This flag controls development settings and should be manually disabled when the game is being built for release. The ghengin packaging tools will take care to set this flag to false when packaging.
               When enabled, vulkan validation layers are enabled.
               Run `cabal build -f-dev` to build with the flag disabled.
               -- Enable with -f+dev

common common-flags

  if flag(dev)
    ghc-options: -Wall -O0

                 -- Debugging symbols
                 --------------------
                 -- -g3

                 -- Linting
                 ----------
                 -- -debug
                 -- -dcore-lint
                 -- -dlint
                 -- -dasm-lint
                 -- -dcmm-lint
                 -- -dstg-lint
                 -- -falignment-sanitisation

    cc-options: -O0 -DDEBUG
    cpp-options: -DDEBUG
                 -DDEBUG_TRACE
                 -- -DTHINGS_ARE_GOING_THAT_BAD
  else
    ghc-options: -Wall -O
    -- -fexpose-all-unfoldings -fspecialize-aggressively
    -- -fllvm
    cc-options: -O

  default-extensions: UnicodeSyntax,
                      MultiParamTypeClasses,
                      NoStarIsType,
                      RankNTypes,
                      DataKinds,
                      PolyKinds,
                      GADTs,
                      ViewPatterns,
                      TypeApplications,
                      TypeFamilies,
                      ExplicitNamespaces,
                      TypeFamilyDependencies,
                      TypeOperators,
                      LambdaCase,
                      BlockArguments,
                      RecordWildCards,
                      UnboxedTuples,
                      PatternSynonyms,
                      DisambiguateRecordFields,
                      DeriveGeneric,
                      LinearTypes,
                      QualifiedDo,
                      QuantifiedConstraints,
                      -- Use Ghengin.Core.Prelude!
                      NoImplicitPrelude,

                      -- This is just an experiment, but honestly it might be
                      -- the right thing to do by default for the engine?

                      -- If you find this comment here later, try benchmarking this
                      -- Strict,
                      -- StrictData,

  default-language: GHC2021


--------------------------------------------------------------------------------
-- Sub-libraries for engine components
--------------------------------------------------------------------------------

library camera
    import:           common-flags
    visibility: public
    exposed-modules:  Ghengin.Camera
    build-depends:    base >=4.19.0.0, ghengin-core, ghengin-core:backend-independent-bits, linear-base, linear-utils, geomancy
    hs-source-dirs:   ghengin-camera
    default-language: GHC2021

library geometry
    import:           common-flags
    visibility: public
    exposed-modules:  Ghengin.Geometry, Ghengin.Geometry.Sphere, Ghengin.Geometry.Cube,
                      Ghengin.Geometry.Transform
    build-depends:    base >=4.19.0.0, ghengin-core:backend-independent-bits, ghengin-core, vector, containers, split, geomancy
    hs-source-dirs:   ghengin-geometry
    default-language: GHC2021

--------------------------------------------------------------------------------
-- Testsuites and old examples
--------------------------------------------------------------------------------

test-suite ghengin-test
    -- Import common warning flags.
    import:           common-flags

    -- Base language which the package is written in.
    default-language: GHC2021

    -- Modules included in this executable, other than Main.
    -- other-modules:    Main.Apecs

    -- LANGUAGE extensions used by modules in this package.
    default-extensions: UnicodeSyntax

    -- The interface type and version of the test suite.
    type:             exitcode-stdio-1.0

    -- Directories containing source files.
    hs-source-dirs:   test

    -- The entrypoint to the test suite.
    main-is:          Main.hs

    -- Test dependencies.
    build-depends:
        base >=4.17.0.0,
        ghengin

