cabal-version:      3.4
-- The cabal-version field refers to the version of the .cabal specification,
-- and can be different from the cabal-install (the tool) version and the
-- Cabal (the library) version you are using. As such, the Cabal (the library)
-- version used must be equal or greater than the version stated in this field.
-- Starting from the specification version 2.2, the cabal-version field must be
-- the first thing in the cabal file.

-- Initial package description 'ghengin' generated by
-- 'cabal init'. For further documentation, see:
--   http://haskell.org/cabal/users-guide/
--
-- The name of the package.
name:               ghengin

-- The package version.
-- See the Haskell package versioning policy (PVP) for standards
-- guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:     +-+------- breaking API changes
--                  | | +----- non-breaking API additions
--                  | | | +--- code changes with no API change
version:            0.1.0.0

tested-with: GHC ==9.4.4 || ==9.6.1

-- A short (one-line) description of the package.
-- synopsis:

-- A longer description of the package.
-- description:

-- The license under which the package is released.
license:            BSD-3-Clause

-- The file containing the license text.
license-file:       LICENSE

-- The package author(s).
author:             romes

-- An email address to which users can send suggestions, bug reports, and patches.
maintainer:         rodrigo.m.mesquita@gmail.com

-- A copyright notice.
-- copyright:
category:           Graphics
build-type:         Simple

-- Extra doc files to be distributed with the package, such as a CHANGELOG or a README.
extra-doc-files:    CHANGELOG.md

-- Extra source files to be distributed with the package, such as examples, or a tutorial module.
extra-source-files:
    cbits/imgui_extensions/*.cpp
    cbits/imgui_extensions/*.hpp

flag dev
  default: True
  manual: True
  description: This flag controls development settings and should be manually disabled when the game is being built for release. The ghengin packaging tools will take care to set this flag to false when packaging.
               When enabled, vulkan validation layers are enabled.
               Run `cabal build -f-dev` to build with the flag disabled.
               -- Enable with -f+dev

common common-flags

  if flag(dev)
    ghc-options: -Wall -O0

                 -- Debugging symbols
                 --------------------
                 -g2

                 -- Linting
                 ----------
                 -debug
                 -- -falignment-sanitisation
                 -- -dcore-lint
                 -- -dlint
                 -dasm-lint
                 -dcmm-lint
                 -dstg-lint
                 -- -fcmm-thread-sanitizer

    cc-options: -O0 -DDEBUG
    cpp-options: -DDEBUG
                 -- -DDEBUG_TRACE
                 -- -DTHINGS_ARE_GOING_THAT_BAD
  else
    ghc-options: -Wall -O2
    -- -fexpose-all-unfoldings -fspecialize-aggressively
    -- -fllvm
    cc-options: -O2

  default-extensions: UnicodeSyntax,
                      MultiParamTypeClasses,
                      NoStarIsType,
                      RankNTypes,
                      DataKinds,
                      PolyKinds,
                      GADTs,
                      ViewPatterns,
                      TypeApplications,
                      TypeFamilies,
                      ExplicitNamespaces,
                      TypeFamilyDependencies,
                      TypeOperators,
                      LambdaCase,
                      BlockArguments,
                      RecordWildCards,
                      UnboxedTuples,
                      PatternSynonyms,
                      DisambiguateRecordFields,
                      DeriveGeneric,
                      LinearTypes,
                      QualifiedDo,
                      QuantifiedConstraints,
                      -- Use Ghengin.Core.Prelude!
                      NoImplicitPrelude


  -- Base language which the package is written in.
  default-language: GHC2021


library ghengin-core
    import:           common-flags

    visibility:       public

    exposed-modules:  Ghengin.Core.Material,
                      Ghengin.Core.Mesh,

                      -- Moved to ghengin-core-indep until #23322 is fixed
                      -- Ghengin.Core.Mesh.Vertex,

                      -- Ghengin.Core.Type.Compatible,
                      -- Ghengin.Core.Type.Utils,

                      -- Ghengin.Core.Shader.Pipeline,
                      -- Ghengin.Core.Shader.Canonical,

                      Ghengin.Core.Render.Pipeline,
                      Ghengin.Core.Render.Property,
                      Ghengin.Core.Render.Packet,
                      Ghengin.Core.Render,

                      Ghengin.Core.Renderer
    signatures:       Ghengin.Core.Renderer.Kernel,
                      Ghengin.Core.Renderer.DescriptorSet,
                      Ghengin.Core.Renderer.Buffer,
                      Ghengin.Core.Renderer.Pipeline,
                      Ghengin.Core.Renderer.RenderPass,
                      Ghengin.Core.Renderer.Texture,
                      Ghengin.Core.Renderer.Sampler,

    hs-source-dirs:   ghengin-core

    build-depends:    base,
                      fir,
                      -- TODO: NOT DEPEND ON VULKAN IN CORE
                      vulkan,
                      linear-base,
                      reference-counting,

                      containers,
                      vector,

                      gl-block,

                      ghengin:ghengin-core-indep,
                      ghengin:linear-utils

-- Temporary solution until #23322 is fixed
library ghengin-core-indep
    import:           common-flags

    visibility:       public

    exposed-modules:  Ghengin.Core.Mesh.Vertex,

                      Ghengin.Core.Type.Compatible,
                      Ghengin.Core.Type.Sized,
                      Ghengin.Core.Type.Utils,

                      Ghengin.Core.Shader.Pipeline,
                      Ghengin.Core.Shader.Canonical,

                      -- New modules
                      Ghengin.Core.Prelude,
                      Ghengin.Core.Log,

    hs-source-dirs:   ghengin-core-indep

    build-depends:    base,
                      fir,
                      -- TODO: NOT DEPEND ON VULKAN IN CORE
                      vulkan,
                      linear-base,
                      reference-counting,

                      containers,
                      vector,
                      bytestring,

                      fast-logger,

                      gl-block,

                      ghengin:linear-utils

-- Linear wrappers over things like IntMap and Vulkan bindings
library linear-utils
    import:           common-flags

    visibility:       public

    exposed-modules:  Data.IntMap.Linear,
                      Vulkan.Linear

    hs-source-dirs:   linear-utils

    build-depends:    base,
                      linear-base,
                      vulkan,
                      reference-counting,
                      containers,
                      vector,
                      bytestring

library ghengin-vulkan
    import:           common-flags

    visibility:       public

    exposed-modules:  Ghengin.Vulkan.Renderer.Kernel,
                      Ghengin.Vulkan.Renderer.DescriptorSet,
                      Ghengin.Vulkan.Renderer.Buffer,
                      Ghengin.Vulkan.Renderer.Pipeline,
                      Ghengin.Vulkan.Renderer.RenderPass,
                      Ghengin.Vulkan.Renderer.Texture,

                      -- To be an instance eventually
                      Ghengin.Vulkan.Renderer,

                      -- Don't know
                      Ghengin.Vulkan.Renderer.ImmediateSubmit,
                      Ghengin.Vulkan.Renderer.Image,
                      Ghengin.Vulkan.Renderer.SwapChain,
                      Ghengin.Vulkan.Renderer.Sampler,
                      Ghengin.Vulkan.Renderer.Frame,

                      -- Should soon enough be part of the required pieces
                      Ghengin.Vulkan.Renderer.Command,
                      -- Modules that don't instance signatures
                      Ghengin.Vulkan.Renderer.Device,
                      Ghengin.Vulkan.Renderer.Device.Instance,
                      Ghengin.Vulkan.Renderer.GLFW.Window,
                      Ghengin.Vulkan.Renderer.Synchronization,

    hs-source-dirs:   ghengin-vulkan

    build-depends:    base,
                      fir,
                      vulkan,
                      GLFW-b,
                      linear-base,
                      reference-counting,
                      -- ghengin:ghengin-core MISTAKE!,
                      ghengin:ghengin-core-indep,
                      gl-block,

                      -- For textures (consider adding to Core too)
                      JuicyPixels,

                      containers,
                      bytestring,
                      mtl,
                      vector,
                      ghengin:linear-utils

    -- Until #23322 is fixed?
    -- Nope, also doesn't work. Perhaps we could support this sort of cyclic dependencies.
    -- mixins:           ghengin:ghengin-core requires ( Ghengin.Core.Renderer.Kernel as Ghengin.Vulkan.Renderer.Kernel
    --                                                 , Ghengin.Core.Renderer.DescriptorSet as Ghengin.Vulkan.Renderer.DescriptorSet
    --                                                 , Ghengin.Core.Renderer.Buffer as Ghengin.Vulkan.Renderer.Buffer
    --                                                 , Ghengin.Core.Renderer.Pipeline as Ghengin.Vulkan.Renderer.Pipeline
    --                                                 , Ghengin.Core.Renderer.RenderPass as Ghengin.Vulkan.Renderer.RenderPass
    --                                                 )


library
    -- Import common warning flags.
    import:           common-flags

    -- Modules exported by the library.
    exposed-modules:  Ghengin,

                      Ghengin.Component.Camera,
                      Ghengin.Component.Mesh.Cube,
                      Ghengin.Component.Mesh.Hex,
                      Ghengin.Component.Mesh.Obj,
                      Ghengin.Component.Mesh.Sphere,
                      Ghengin.Component.Transform,
                      Ghengin.Component.Transform.Animation,
                      Ghengin.Component.UI,
                      Ghengin.Component.Orphans,

                      Ghengin.DearImGui,
                      Ghengin.DearImGui.Gradient,

                      Ghengin.Input,

                      Ghengin.Render,
                      Ghengin.Render.Queue,

                      Ghengin.Scene,
                      Ghengin.Scene.Graph,

                      Ghengin.Shader,
                      Ghengin.Shader.FIR,
                      Ghengin.Shader.Syntactic,
                      Ghengin.Shader.Utils,
                      Ghengin.Shader.Fixed,
                      Ghengin.Shader.Lighting,

                      Ghengin.Utils,
                      Ghengin.World,

    -- Provide all the batteries
    reexported-modules:

        -- apecs
        Apecs.Linear,
        -- reference-counting
        Data.Linear.Alias
    -- reexported-modules: Ghengin.Vulkan.Renderer.Kernel,
    --                     Ghengin.Vulkan.Renderer.DescriptorSet,
    --                     Ghengin.Vulkan.Renderer.Buffer,
    --                     Ghengin.Vulkan.Renderer.Pipeline,
    --                     Ghengin.Vulkan.Renderer.RenderPass,
    --                     Ghengin.Vulkan.Renderer.Texture,
    --                     Ghengin.Vulkan.Renderer.Sampler

    -- Modules included in this library but not exported.
    -- other-modules:

    -- cbits
    include-dirs:       cbits/imgui_extensions
    cxx-options:        -std=c++11
    cxx-sources:        cbits/imgui_extensions/imgui_color_gradient.cpp
    -- extra-libraries:    stdc++
    include-dirs:       cbits/imgui_extensions/
    if os(darwin)
      ghc-options:      -optcxx-std=c++11
    
    if flag(dev)
      cpp-options: -DDEVELOPMENT

    -- Other library packages from which modules are imported.
    build-depends:    base >=4.17,
                      vulkan >=3.23,
                      GLFW-b >=3.3,
                      vector >=0.13,
                      vector-sized >=1.4,
                      fir     >=0.1,
                      bytestring,
                      mtl,
                      text >= 2.0.1,
                      containers,
                      linear-apecs,
                      geomancy >= 0.2.4.2,
                      wavefront,
                      time,
                      split,
                      dear-imgui >= 2.1.3,
                      StateVar,
                      derive-storable,
                      random,
                      gl-block,
                      -- ghc-typelits-natnormalise,
                      fast-logger,
                      JuicyPixels,
                      inline-c-cpp,
                      primitive,
                      -- fir already depends on lens, so we might as well
                      lens >= 5.2,
                      linear-base,
                      reference-counting,
                      ghengin:ghengin-core-indep,
                      ghengin:ghengin-core,
                      ghengin:ghengin-vulkan,
                      ghengin:linear-utils

                      -- witch,
                      -- TODO: algebraic-graphs

    -- ROMES: To reproduce error message bug with backpack, comment out some of the requires lines below:
    mixins:           ghengin:ghengin-core
                      requires ( Ghengin.Core.Renderer.Kernel as Ghengin.Vulkan.Renderer.Kernel
                               , Ghengin.Core.Renderer.DescriptorSet as Ghengin.Vulkan.Renderer.DescriptorSet
                               , Ghengin.Core.Renderer.Buffer as Ghengin.Vulkan.Renderer.Buffer
                               , Ghengin.Core.Renderer.Pipeline as Ghengin.Vulkan.Renderer.Pipeline
                               , Ghengin.Core.Renderer.RenderPass as Ghengin.Vulkan.Renderer.RenderPass
                               , Ghengin.Core.Renderer.Texture as Ghengin.Vulkan.Renderer.Texture
                               , Ghengin.Core.Renderer.Sampler as Ghengin.Vulkan.Renderer.Sampler
                               )

    -- Directories containing source files.
    hs-source-dirs:   src


test-suite ghengin-test
    -- Import common warning flags.
    import:           common-flags

    -- Base language which the package is written in.
    default-language: GHC2021

    -- Modules included in this executable, other than Main.
    -- other-modules:    Main.Apecs

    -- LANGUAGE extensions used by modules in this package.
    default-extensions: UnicodeSyntax

    -- The interface type and version of the test suite.
    type:             exitcode-stdio-1.0

    -- Directories containing source files.
    hs-source-dirs:   test

    -- The entrypoint to the test suite.
    main-is:          Main.hs

    -- Test dependencies.
    build-depends:
        base >=4.17.0.0,
        ghengin

executable planets
    -- .hs or .lhs file containing the Main module.
    main-is:          Main.hs

    -- Modules included in this executable, other than Main.
    other-modules: Planet, Noise, Shader

    -- LANGUAGE extensions used by modules in this package.
    default-extensions: UnicodeSyntax

    -- Other library packages from which modules are imported.
    build-depends:
        base >=4.17.0.0,
        ghengin,
        -- Can't depend on this without instancing it because of backpack
        ghengin:ghengin-core,
        ghengin:ghengin-vulkan,
        ghengin:ghengin-core-indep,
        mtl, vector, hsnoise, containers, random, linear-base,
        derive-storable

    ghc-options: -dcmm-lint -dstg-lint -dasm-lint -g2 -rtsopts -debug
    cpp-options: -DDEBUG

    -- ghc-options: -ddump-simpl
                 -- -ddump-to-file
                 -- -dsuppress-ticks
                 -- -dsuppress-stg-exts
                 -- -dsuppress-coercions
                 -- -dsuppress-idinfo
                 -- -dsuppress-unfoldings
                 -- -dsuppress-module-prefixes
                 -- -dsuppress-timestamps
                 -- -dsuppress-uniques
                 -- -dsuppress-var-kinds

    -- Directories containing source files.
    hs-source-dirs:   planets
    mixins:           ghengin:ghengin-core
                      requires ( Ghengin.Core.Renderer.Kernel as Ghengin.Vulkan.Renderer.Kernel
                               , Ghengin.Core.Renderer.DescriptorSet as Ghengin.Vulkan.Renderer.DescriptorSet
                               , Ghengin.Core.Renderer.Buffer as Ghengin.Vulkan.Renderer.Buffer
                               , Ghengin.Core.Renderer.Pipeline as Ghengin.Vulkan.Renderer.Pipeline
                               , Ghengin.Core.Renderer.RenderPass as Ghengin.Vulkan.Renderer.RenderPass
                               , Ghengin.Core.Renderer.Texture as Ghengin.Vulkan.Renderer.Texture
                               , Ghengin.Core.Renderer.Sampler as Ghengin.Vulkan.Renderer.Sampler
                               )

    -- Base language which the package is written in.
    default-language: GHC2021

-- executable ocean
--     -- .hs or .lhs file containing the Main module.
--     main-is:          Main.hs

--     -- Modules included in this executable, other than Main.
--     other-modules:    Ocean.Shader

--     -- LANGUAGE extensions used by modules in this package.
--     default-extensions: UnicodeSyntax

--     -- Other library packages from which modules are imported.
--     build-depends:
--         base ^>=4.17.0.0,
--         ghengin,
--         mtl,
--         vector,
--         containers,
--         hsnoise

--     -- Directories containing source files.
--     hs-source-dirs:   ocean

--     -- Base language which the package is written in.
--     default-language: GHC2021

